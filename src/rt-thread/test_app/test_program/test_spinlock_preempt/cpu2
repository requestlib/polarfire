/*******************************************************************************
 * Copyright 2019-2021 Microchip FPGA Embedded Systems Solutions.
 *
 * SPDX-License-Identifier: MIT
 *
 * Application code running on U54_3
 *
 */
#include <stdio.h>
#include <string.h>
#include "mpfs_hal/mss_hal.h"
#include "drivers/mss/mss_mmuart/mss_uart.h"
#include<rtthread.h>
#include<board.h>
#include<rthw.h>
#include<test_tool.h>

#define THREAD_PRIORITY 15
#define THREAD_STACK_SIZE 4096
#define THREAD_TIMESLICE 5

static rt_thread_t tid2 = RT_NULL;
static rt_thread_t tid3 = RT_NULL;
static rt_base_t start = 0;
static rt_base_t end = 0;


static void thread2_entry(void *parameter)
{
   int level = rt_spin_lock(&test_spinlock);
   rt_spin_unlock(&test_spinlock, level);
   rt_kprintf("preempt lock.\r\n");
   while(1);
}

static void thread3_entry(void *parameter)
{
    primary_cal_test(3000000*5);
    end = read_csr(mcycle);
    rt_kprintf("thread3 total spent time:%d\r\n",end-start);
}

void u54_2(void)
{
    int core = rt_hw_cpu_id();
    rt_kprintf("Core %d Hello world \r\n", core);
 
    start = read_csr(mcycle);
    rt_thread_delay(200);
    tid2 = rt_thread_create("thread2", thread2_entry, RT_NULL, THREAD_STACK_SIZE*2, THREAD_PRIORITY, THREAD_TIMESLICE);
    if(tid2 != RT_NULL){
        tid2->bind_cpu=2;
        rt_thread_startup(tid2);
    }
    rt_thread_delay(100); //1秒后 高优先级线程到来
    tid3 = rt_thread_create("thread3", thread3_entry, RT_NULL, THREAD_STACK_SIZE*2, THREAD_PRIORITY-5, THREAD_TIMESLICE);
    if(tid3 != RT_NULL){
        tid3->bind_cpu=2;
        rt_thread_startup(tid3);
    }
}



